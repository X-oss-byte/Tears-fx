name: CD
run-name: CD-${{ github.run_id }}-${{ github.ref_name }}-${{ inputs.preid }}-${{ inputs.series }}
on:
  workflow_dispatch:
    inputs:
      preid:
        description: "preid name(alpha, beta, rc, stable)"
        required: true
        default: "rc"
      series:
        description: "release sprint series name"
        required: false
        default: ""
      skip-version-rc:
        description: "release RC version just with lerna publish, skip run lerna version(yes or no)"
        required: false
        default: "no"
      pkgs:
        type: string
        required: false
        description: "Please enter the package names you want to publish, such as cli, vscode, sdk, server and template. Please separate multiple entries with spaces"
  schedule:
    - cron: "0 16 * * *"

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      CI: true
      PREID: ${{ github.event.inputs.preid }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install wine64
        run: |
          sudo apt update
          sudo apt install wine64 -y

      - name: Setup npm registry
        run: |
          echo "${{ secrets.NPMRC }}" > ~/.npmrc

      - name: manage pkgs to release
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pkgs }}
        run: bash .github/scripts/lerna.sh ${{github.event.inputs.pkgs}}

      - name: Setup project
        run: |
          npm run setup
        env:
          REQUEST_TOKEN: ${{ secrets.CD_PAT }}

      - name: Setup git
        run: |
          git config --global user.name 'MSFT-yiz'
          git config --global user.email 'yiz@microsoft.com'

      - name: release alpha npm packages to npmjs.org
        run: |
          npx lerna version prerelease --preid=alpha.$(git rev-parse --short HEAD) --exact --no-push --allow-branch ${GITHUB_REF#refs/*/} --yes

      - name: version change
        id: version-change
        run: |
          echo "CHANGED=$(git tag --points-at HEAD | xargs)" >> $GITHUB_OUTPUT
          echo "TEMPLATE_VERSION=$(git tag --points-at HEAD | grep templates)" >> $GITHUB_OUTPUT
          echo "EXTENSION_VERSION=$(git tag --points-at HEAD | grep ms-teams-vscode-extension@)" >> $GITHUB_OUTPUT
          if git tag --points-at HEAD | grep templates | grep rc;
          then
              git push -d origin $TEMPLATE_VERSION
          fi

      - name: publish alpha release to npm org
        run: |
          npx lerna publish from-package --dist-tag=alpha --yes --allow-branch ${GITHUB_REF#refs/*/}
        env:
          TEMPLATE_PATH: ${{ runner.temp }}/teamsfx_templates_v3

      - name: upload release info to artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: |
            changed.txt
            series.txt
            versions.json
            *.vsix
            *.exe

